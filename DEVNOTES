DEVELOPER NOTES :)

Git Conventions

!! Use conventional commits !!

<type>[optional scope]: <description>
[optional body]
[optional footer(s)]

If an issue is fixed, add a footer that closes the issue, like this:
Fixed #42, #1337, #1338 (example)

If a commit is breaking, add a footer that describes the breaking change, like this:
BREAKING CHANGE: environment variables now take precedence over config files (example)

If a commit introduces changes but does not close any issues, add a footer like this:
In progress: #42 (example)

!! Use appropriate commit types !!

feat: A new feature
fix: A bug fix
docs: Documentation only changes
style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)
refactor: A code change that neither fixes a bug nor adds a feature
perf: A code change that improves performance
test: Adding missing tests or correctly existing tests
build: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)
ci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)
chore: Other changes that don't modify src or test files
revert: Reverse a previous commit

!! Name branches appropriately !!

type/description
